
import java_cup.runtime.*;
	
/* Terminals (tokens returned by the scanner). */
terminal		 NM,QM,LP,ID,EM, RP, CL, DT, II, COMA,WF,WITHSOME,WITHALL,LCURLY,RCURLY,ANDENTAIL,
ORENTAIL,ARROW,AND,OR,DOUBLEIMPLICATION,NOT,ANDOR,NEXISTS,THRESH,ALL,PARSING,TRANSLATION,ACTING,INFERENCE,ACTIVATE,ACTIVATEASSERT,ADDTOCONTEXT,ASK,ASKIFNOT,ASKWH,ASKWHNOT,CLEARINFER,CLEARKB,DEFINEFRAME,DEFINEPATH,DEMO,DESCRIBECONTEXT,DESCRIBETERMS,EXPERT,LISP,LISTASSERTEDWFFS,LISTCONTEXTS,LISTTERMS,LISTWFFS,LOAD,NORMAL,PERFORM,REMOVEFROMCONTEXT,SETCONTEXT,SETDEFAULTCONTEXT,SETMODE1,SETMODE2,SETMODE3,SHOW,TRACE,UNDEFINEPATH,UNLABELED,UNTRACE,ADJUST,DASH,CONVERSE,COMPOSE,KSTAR,KPLUS,IRR,DOMAINRESTRICT;

/* Non-terminals */
nonterminal	String		condH,  entailment, terminalPunctuation,SNePSLOGsymbol,qvar,symbolSequence,withSomeTerm,withAllTerm,termSet,prefixedTerm,termSequence,negatedTerm,andorTerm,nexistsTerm,threshTerm,atomicTerm,termSetSequence,wff,nexistsParamters,helpersConnectives,infixedTerm,allTerm,termSetH,atomicTermH,SNePSLOGfunction,snepslogCommand,activateH,lispString,lispStringH,lispList,defineH,describeContextH,activateHK,describeTermH,defineRelation,identifier,unipath,unipathHelper,unipathType,path;



/* The grammar */


snepslogCommand ::= ACTIVATE wff:w activateH:a1{:RESULT=w+a1;:} | ACTIVATEASSERT wff:w1 activateHK:a2 {:RESULT="believe in: "+w1+a2;:} | ADDTOCONTEXT SNePSLOGsymbol:s termSet:t activateH:a3{:RESULT="addContext "+s+t+a3;:}  | ASK wff:w2 activateHK:a4 {:RESULT="ask:"+w2+a4;:}| ASKIFNOT wff:w3 activateHK:a5 {:RESULT="askifnot:"+ w3+a5;:}  |ASKWH wff:w4 activateHK:a6 {:RESULT="askifnot:"+ w4+a6;:} | ASKWHNOT wff:w5 activateHK:a7 {:RESULT="askifnot:"+ w5+a7;:}| CLEARINFER activateH:a8 {:RESULT="clearInfere"+a8;:} | CLEARKB activateH:a9 {:RESULT="clearKB"+a9;:} | DEFINEFRAME SNePSLOGsymbol:s1 lispList:l defineH:d activateH:a10 {:RESULT="defineFrame"+a10;:}| DESCRIBECONTEXT describeContextH:dd activateH:ac{:RESULT=dd+ac;:} | DESCRIBETERMS describeTermH:d2 activateH:aa {:RESULT=d2+aa;:} | EXPERT activateH:a11 {:RESULT="expert"+a11;:} | LISP activateH:a12 {:RESULT="lisp"+a12;:}| LISTASSERTEDWFFS describeContextH:dc activateH:ah{:RESULT=dc+ah;:}| LISTCONTEXTS activateH:a13 {:RESULT="list contexts"+a13;:}| LISTTERMS describeTermH:dterm activateH:aac {:RESULT=dterm+aac;:}| LISTWFFS activateH:a14 {:RESULT="list wffs"+a14;:} | NORMAL activateH:a15 {:RESULT="normal"+a15;:} |  PERFORM atomicTerm:atom {:RESULT="perform "+atom;:}|  REMOVEFROMCONTEXT SNePSLOGsymbol:sym termSet:termm {:RESULT="remove from the context "+sym+" "+termm;:};

describeContextH ::= symbolSequence:sss  {:RESULT=sss;:} | {:RESULT="";:};
describeTermH ::= termSet:tt  {:RESULT=tt+"";:} | {:RESULT="";:};


defineRelation ::= identifier:name identifier:type NM:limit ADJUST:ad {:RESULT="defineRelation:"+name+" "+type+" "+limit+" "+ad;:};

/*definePath ::= DEFINEPATH identifier:snepsRelation */


path ::= unipath:up {:RESULT="unipath:"+up;:}| LP CONVERSE RP
unipath ::= identifier:relation unipathType:t unipathHelper:h {:RESULT=relation+" "+t+" "+h;:};
unipathType ::= DASH {:RESULT="-";:}|{:RESULT="";:};
unipathHelper ::= DT {:RESULT=".";:}|{:RESULT="";:};


/*definePathCmd DEFINEPATH AND DEMO Cmd AND load Cmd*/

activateH ::= DT{:RESULT=".";:} | {:RESULT="";:};
activateHK ::= terminalPunctuation:tp {:RESULT=tp;:}|{:RESULT="";:};
defineH ::= lispString:ss {:RESULT=ss;:} | {:RESULT="";:};

SNePSLOGfunction ::= PARSING {:RESULT="parsing";:}|ACTING {:RESULT="acting";:}|TRANSLATION {:RESULT="translation";:}|INFERENCE {:RESULT="inference";:};

wff ::=  infixedTerm:e1 {:RESULT=e1;:} | entailment:e{:RESULT=e;:} |prefixedTerm:p{:RESULT=p;:};

infixedTerm ::= prefixedTerm:p1 helpersConnectives:h1 prefixedTerm:p2 {:RESULT=p1+" "+h1+" "+p2;:} | prefixedTerm:p3 helpersConnectives:h2 infixedTerm:i2 {:RESULT=p3+" "+h2+" "+i2;:};
 
helpersConnectives ::= AND{:RESULT="and";:} | OR{:RESULT="or";:}| DOUBLEIMPLICATION{:RESULT="<=>";:};


entailment ::= termSet:t1 ARROW termSet:t2 {:RESULT=t1+ "ARROW "+t2;:}|termSet:t3 ORENTAIL termSet:t4 {:RESULT=t3+" ORENTAIL "+t4;:}  | termSet:t5 ANDENTAIL termSet:t6 {:RESULT=t5+" ANDENTAIL "+t6;:} | termSet:t7 II termSet:t8 {:RESULT=t7+" numerical entail "+t8;:};	



termSet ::= prefixedTerm:p{:RESULT="termSet"+p;:} | RCURLY termSequence:t LCURLY {:RESULT="{"+t+"}";:};
termSequence ::= prefixedTerm:p{:RESULT="prefixed term:"+p;:}|prefixedTerm:p1 termSequence:s{:RESULT="prefixed term "+p1+" and prefixed term "+s;:};


prefixedTerm ::= negatedTerm:n{:RESULT="negated term: "+n;:} | andorTerm:a{:RESULT="andor term: "+a;:} | allTerm:l{:RESULT="forAll term: "+l;:} | nexistsTerm:x{:RESULT="nExist term: "+x;:}
| threshTerm:h{:RESULT="forAll term: "+h;:} | atomicTerm:i{:RESULT="forAll term: "+i;:};


allTerm ::= ALL LP symbolSequence:s	RP LP wff:w RP {:RESULT=s+" "+w;:};

negatedTerm ::= NOT atomicTerm:a{:RESULT="not "+a;:};

andorTerm ::= ANDOR LP NM:i COMA NM:j RP termSet:t{:Integer x = Integer.parseInt(i+"");Integer y=Integer.parseInt(j+"");if(x>=0 && y>=x){RESULT="andorTerm Right";}else{RESULT="wrong andor term";}:};


threshTerm ::= THRESH LP NM:i COMA NM:j RP termSet:t {:Integer x = Integer.parseInt(i+"");Integer y=Integer.parseInt(j+"");if(x>=0 && y>=x){RESULT="threshTerm Right";}else{RESULT="wrong threshTerm";}:}| THRESH LP NM:i1 RP termSet:t1 {:Integer x = Integer.parseInt(i1+"");if(x>=0){RESULT="threshTerm Right";}else{RESULT="wrong thresTerm";}:};

nexistsTerm ::= NEXISTS nexistsParamters:np LP symbolSequence:s RP LP termSet:t1 CL termSet:t2 RP{:RESULT="";:};

nexistsParamters ::= LP NM:i COMA NM:j COMA NM:k RP {:RESULT="("+i+","+j+","+k+")";:}|LP NM:j1 RP{:RESULT="("+j1+")";:}| LP NM:i1 COMA NM:k1 RP {:RESULT="("+i1+","+k1+")";:};


atomicTerm ::=  SNePSLOGsymbol:s atomicTermH:at {:RESULT=s+at;:}| qvar:q atomicTermH:qh{:RESULT=q+qh;:} | withSomeTerm:ws {:RESULT=ws;:}|withAllTerm:wa {:RESULT=wa;:}|LP wff:w RP{:RESULT="("+w+")";:};

atomicTermH ::= LP termSetSequence:t2 RP{:RESULT="("+t2+")";:};

withSomeTerm ::= WITHSOME LP symbolSequence:s COMA termSet:t1 COMA termSet:t2 RP {:RESULT="withSomeTerm "+s+"-"+t1+"-"+t2;:} | WITHSOME LP symbolSequence:s1 COMA termSet:t3 COMA termSet:t4 termSet:t5 RP {:RESULT="withSomeTerm "+s1+"-"+t3+"-"+t4+"-"+t5;:};


withAllTerm ::= WITHALL LP symbolSequence:s COMA termSet:t1 COMA termSet:t2 RP{:RESULT="withAllTerm "+s+"-"+t1+"-"+t2;:} | WITHALL LP symbolSequence:s1 COMA termSet:t3 COMA termSet:t4 termSet:t5 RP{:RESULT="withAllTerm "+s1+"-"+t3+"-"+t4+"-"+t5;:};

termSetSequence ::= termSet:t1 termSetH:t2 {:RESULT=t1+t2;:}|{:RESULT="";:};
termSetH ::= COMA termSet:ts {:RESULT=" and "+ts;:};

symbolSequence ::= SNePSLOGsymbol:s condH:c {:RESULT=s+" "+c;:};
condH ::= symbolSequence:s1{:RESULT=s1;:} | {:RESULT="";:};


lispList ::= LP lispString:l lispStringH:l1 RP{:RESULT=l+" "+l1;:};
lispStringH ::= lispList:r {:RESULT=r;:}| {:RESULT="";:};

lispString ::= identifier:i {:RESULT=i+"";:};

identifier ::= ID:ii {:RESULT=ii+"";:};

qvar ::= QM SNePSLOGsymbol:s {:RESULT="query"+s;:};

SNePSLOGsymbol ::= WF NM:n{:RESULT="wff"+n;:};


terminalPunctuation ::= DT {:RESULT="terminal punctuation in sneps.\n";:}| COMA {:RESULT="terminal punctuation in sneps.\n";:}|  error {:RESULT = "Not a grammatical sneps!\n";System.out.println("Not sneps!");:};















